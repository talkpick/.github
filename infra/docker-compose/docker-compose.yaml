version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: talkpick-test-mysql
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_DOCKER_PORT}"
    env_file:
      - ./mysql/mysql-test.env
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - deploy_talkpick
      
  redis:
    image: redis:8.0.0-alpine
    container_name: talkpick-redis
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_DOCKER_PORT}"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/data:/data
      - ./redis/config.conf:/usr/local/etc/redis/redis.conf
    networks:
      - deploy_talkpick
      
  elasticsearch:
    env_file:
      - ./elasticsearch/elastic.env
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile
      args:
        ELK_VERSION: 8.12.2
    container_name: talkpick-elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "${ELS_HOST_PORT}:${ELS_DOCKER_PORT}"

    healthcheck:
      test: ["CMD-SHELL", "curl -s http://elasticsearch:${ELS_DOCKER_PORT} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      
    networks:
      - deploy_talkpick

  kibana:
    env_file:
      - ./elasticsearch/kibana.env
    image: kibana:8.12.2
    container_name: talkpick-kibana
    depends_on:
      - elasticsearch
    ports:
      - "${KIBANA_HOST_PORT}:${KIBANA_DOCKER_PORT}"
    networks:
      - deploy_talkpick
      
  backend:
    build:
      context: ./talkpick-backend
      dockerfile: Dockerfile
    container_name: talkpick-backend
    ports:
      - "${BACKEND_HOST_PORT}:${BACKEND_DOCKER_PORT}"
    env_file:
      - ./env/deploy.env
    networks:
      - deploy_talkpick
      
  batch:
    build:
      context: ./talkpick-batch/build
      dockerfile: Dockerfile
    container_name: talkpick-batch
    volumes:
      - ./talkpick-batch/logs:/logs
    ports:
      - "${BATCH_HOST_PORT}:${BATCH_DOCKER_PORT}"
    env_file:
      - ./env/deploy.env
    networks:
      - deploy_talkpick
      
  front:
    build:
      context: ./talkpick-frontend/app
      dockerfile: ../Dockerfile
    container_name: talkpick-frontend
    ports:
      - "${FRONT_HOST_PORT}:${FRONT_DOCKER_PORT}"
    networks:
      - deploy_talkpick
      
  rabbitmq:
    image: rabbitmq:3.11-management
    build:
      context: ./rabbit-mq
      dockerfile: Dockerfile
    container_name: talkpick-rabbitmq
#    volumes:
#      - ./rabbit-mq/data/:/var/lib/rabbitmq/
#      - ./rabbit-mq/logs/:/var/log/rabbitmq/
    env_file:
      - ./env/rabbitmq.env
    ports:
      - "${RABBIT_AMQP_HOST_PORT}:${RABBIT_AMQP_DOCKER_PORT}"
      - "${RABBIT_WEB_UI_HOST_PORT}:${RABBIT_WEB_UI_DOCKER_PORT}"
      - "${RABBIT_STOMP_HOST_PORT}:${RABBIT_STOMP_DOCKER_PORT}"
      - "${RABBIT_CLUSTER_HOST_PORT}:${RABBIT_CLUSTER_DOCKER_PORT}"
      - "${RABBIT_WEBSOCKET_STOMP_HOST_PORT}:${RABBIT_WEBSOCKET_STOMP_DOCKER_PORT}"
    networks:
      - deploy_talkpick
     
  nginx:
    image: nginx:alpine
    container_name: talkpick-nginx
    ports:
      - "${NGINX_HOST_PORT}:${NGINX_DOCKER_PORT}"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
      - ./nginx/logs:/var/log/nginx
    restart: on-failure:3
    networks:
      - deploy_talkpick
      
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.4.2
    container_name: talkpick-nginx-exporter
    command: ["-nginx.scrape-uri=http://nginx:80/nginx_status"]
    ports:
      - "${NGINX_EXPORTER_HOST_PORT}:${NGINX_EXPORTER_DOCKER_PORT}"
    depends_on:
      - nginx
    networks:
      - deploy_talkpick

  loki:
    image: grafana/loki:3.5
    user: root
    container_name: talkpick-loki
    ports:
      - "${LOKI_HOST_PORT}:${LOKI_DOCKER_PORT}"
    volumes:
      - ./loki/data:/loki
    networks:
      - deploy_talkpick

  prometheus:
    image: prom/prometheus:v3.4.0-rc.0
    user: root
    container_name: talkpick-prometheus
    volumes:
      - ./prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml:ro,Z
      - ./grafana/datasources/datasources.yml:/etc/prometheus/datasources.yml
      - ./prometheus/data:/prometheus
    ports:
      - "${PROMETHEUS_HOST_PORT}:${PROMETHEUS_DOCKER_PORT}"
    depends_on:
      - nginx-exporter
    networks:
      - deploy_talkpick
      
  promtail:
    image: grafana/promtail:3.5
    container_name: talkpick-promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - ./nginx/logs:/var/log/nginx
      - ./talkpick-batch/logs/talkpick-batch.log:/var/log/talkpick-batch/talkpick-batch.log
    depends_on:
      - loki
    networks:
      - deploy_talkpick
      
  grafana:
    image: grafana/grafana:12.0.1
    container_name: talkpick-grafana
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/data:/var/lib/grafana
    ports:
      - "${GRAFANA_HOST_PORT}:${GRAFANA_DOCKER_PORT}"
    depends_on:
      - prometheus
      - loki
    networks:
      - deploy_talkpick
      
  zipkin:
    image: openzipkin/zipkin:3.5
    container_name: talkpick-zipkin
    ports:
      - "${ZIPKIN_HOST_PORT}:${ZIPKIN_DOCKER_PORT}"
    networks:
      - deploy_talkpick

networks:
  deploy_talkpick:
    external: true